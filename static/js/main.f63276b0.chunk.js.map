{"version":3,"sources":["ButtonContainer/ButtonContainer.module.css","Calculator/Calculator.module.css","DisplayRow/DisplayRow.module.css","Button/Button.module.css","Calculator/Calculator.js","Display/Display.module.css","DisplayRow/DisplayRow.js","Display/Display.js","Button/Button.js","ButtonContainer/ButtonContainer.js","serviceWorker.js","index.js"],"names":["module","exports","buttonContainer","buttonRow","decimalSign","frame","container","paragraph","anchor","displayRow","input","output","button","effect_dylan","clear","zero","operator","decimal","Calculator","props","_this","Object","_Users_xyz_Documents_Programming_Projects_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_xyz_Documents_Programming_Projects_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_xyz_Documents_Programming_Projects_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleClick","event","value","target","inputArray","state","split","lastInput","length","lastInputDigit","beforeLastInputDigit","operatorArray","changeState","setState","prevState","includes","parseFloat","eval","toFixed","toString","slice","newInput","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","classes","_Display_Display__WEBPACK_IMPORTED_MODULE_6__","_ButtonContainer_ButtonContainer__WEBPACK_IMPORTED_MODULE_7__","href","Component","display","DisplayRow","myClass","classname","react_default","type","Display","src_DisplayRow_DisplayRow","Button","id","label","onClick","children","ButtonContainer","src_Button_Button","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f63276b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"ButtonContainer_buttonContainer__2wAsF\",\"buttonRow\":\"ButtonContainer_buttonRow__3yt5q\",\"decimalSign\":\"ButtonContainer_decimalSign__1faqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"Calculator_frame__vNnRB\",\"container\":\"Calculator_container__1I97q\",\"paragraph\":\"Calculator_paragraph__3NGPM\",\"anchor\":\"Calculator_anchor__2RaWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayRow\":\"DisplayRow_displayRow__2GG5Z\",\"input\":\"DisplayRow_input__1Mn7B\",\"output\":\"DisplayRow_output__n7nPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__WWyIb\",\"effect_dylan\":\"Button_effect_dylan__1CcDs\",\"clear\":\"Button_clear__1oltD\",\"zero\":\"Button_zero__28PZq\",\"operator\":\"Button_operator__1TMf6\",\"decimal\":\"Button_decimal__124DW\"};","/* eslint-disable no-eval */\nimport React, { Component } from 'react';\nimport Display from '../Display/Display';\nimport ButtonContainer from '../ButtonContainer/ButtonContainer';\nimport classes from './Calculator.module.css';\n\n\n\nclass Calculator extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            input: '',\n            output: '0',\n        }\n    }\n    \n    \n\n    handleClick = (event) => {\n        const value = event.target.value;\n        const inputArray = this.state.input.split(/[+\\-*/]/);\n        const lastInput = inputArray[inputArray.length - 1];\n        const lastInputDigit = this.state.input[this.state.input.length - 1];\n        const beforeLastInputDigit = this.state.input[this.state.input.length - 2];\n        const operatorArray = [\"+\", \"-\", \"*\", \"/\"];\n        const changeState = () => {\n            this.setState(prevState => ({ input: prevState.input += value })) \n        }\n\n       \n\n        switch (value) {\n            case '=': {\n                //preventing evaluation of output with empty or 1 number input\n                if (inputArray.length === 0 || inputArray.length === 1){\n                    break;\n                }\n                // preventing evaluation of output after previous input of \"+\" \"-\" \"/\" \"*\"\n                else if (operatorArray.includes(lastInputDigit)){\n                    break;\n                }\n                // preventing division by 0\n                else if (lastInputDigit === \"0\" && beforeLastInputDigit === \"/\"){\n                    break;\n                }\n                //evaluating output\n                else {\n                    const output = parseFloat(eval(this.state.input).toFixed(5)).toString();\n                    this.setState({ output: output });    \n                }\n                break;\n            }\n            case 'Clear': {\n                this.setState({ input: '', output: '0' });\n                break;\n            }\n            case 'Delete': {\n                //preventing using DELETE on empty input\n                if (this.state.output === '0' && this.state.input === ''){\n                    break;\n                }\n\n                this.setState(prevState => ({\n                    input: prevState.input.slice(0, -1),\n                    output: '0',\n                }));\n                break;\n            }\n\n            case '.': {\n                // preventing the entered number to have more than one \".\"\n                if (!lastInput.includes('.')) {\n                    changeState();\n                }\n                break;\n            }\n\n            case '0': {\n                //prevent the entered number to have \"0\" in the begining \n                if (!(lastInput[0] === \"0\") || (lastInput[0] === \"0\" && lastInput[1] === \".\")) {\n                    changeState();\n                }\n                break;\n            }\n\n            case \"+\":\n            case \"-\":\n            case \"*\":\n            case \"/\": {\n                //preventing using operators on empty input\n                if (this.state.input === '') {\n                    break;\n                }\n                //changing operator  \n                else if (operatorArray.includes(lastInputDigit)) {\n                    const newInput = this.state.input.slice(0, -1) + value;\n                    this.setState({ input: newInput });\n                    break;\n                }\n                else {\n                    changeState();\n                }\n                break;\n            }\n            \n\n            default: {\n                changeState();\n                break;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.frame}>\n                <div className={classes.container}>\n                    <Display input={this.state.input} output={this.state.output} />\n                    <ButtonContainer handleClick={this.handleClick} />\n                </div>\n                <p className={classes.paragraph}>Coded by Iryna Malankava</p>\n                <p className={classes.paragraph}>Inspired by <a className={classes.anchor} \n                    href=\"https://dribbble.com/shots/2354920-Calculator-Day19-My-Free-UI-UX-SketchApp-Training\">Dribbble</a></p>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Calculator;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__Qkbbb\"};","import React from 'react';\nimport classes from './DisplayRow.module.css';\n\nconst DisplayRow = (props) => {\n        const myClass = classes.displayRow + \" \" + classes[props.classname]\n        return <input type = 'text' value = {props.value} className = {myClass}></input>\n    \n\n};\n\nexport default DisplayRow;","import React from 'react';\nimport DisplayRow from '../DisplayRow/DisplayRow';\n\nimport classes from './Display.module.css';\n\n\nconst Display = (props) => (\n    \n        <div className = {classes.display}>\n            <DisplayRow classname = \"input\"  value = {props.input}/>\n            <DisplayRow classname = \"output\" value = {props.output}/>\n        </div>\n\n);\n\nexport default Display;","import React from 'react';\nimport classes from './Button.module.css';\n\n\nconst Button = (props) => {\n        const myClass = classes.button + \" \" + classes[props.classname] ;\n        return (<div className = 'Button'>\n                    <button\n                    id = {props.id}\n                    className = {myClass}\n                    value = {props.label}\n                    onClick = {props.handleClick}>{props.children}</button>\n                </div>)\n\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button/Button';\n\nimport classes from './ButtonContainer.module.css';\n\nconst ButtonContainer = (props) => (\n    <div className = {classes.buttonContainer}>\n        <div className={classes.buttonRow}>\n            <Button id='clear' label={'Clear'} handleClick={props.handleClick} classname=\"clear\">CLS</Button>\n            <Button id='delete' label={'Delete'} handleClick={props.handleClick} classname=\"clear\">DEL</Button>\n            <Button id='divide' label={'/'} handleClick={props.handleClick} classname=\"operator\">/</Button>\n        </div>\n        <div className={classes.buttonRow}>\n            <Button id='seven' label={'7'} handleClick={props.handleClick}>7</Button>\n            <Button id='eight' label={'8'} handleClick={props.handleClick}>8</Button>\n            <Button id='nine' label={'9'} handleClick={props.handleClick}>9</Button>\n            <Button id='multiply' label={'*'} handleClick={props.handleClick} classname=\"operator\">x</Button>\n        </div>\n        <div className={classes.buttonRow}>\n            <Button id='four' label={'4'} handleClick={props.handleClick}>4</Button>\n            <Button id='five' label={'5'} handleClick={props.handleClick}>5</Button>\n            <Button id='six' label={'6'} handleClick={props.handleClick}>6</Button>\n            <Button id='subtract' label={'-'} handleClick={props.handleClick} classname=\"operator\">-</Button>\n        </div>\n        <div className={classes.buttonRow}>\n            <Button id='one' label={'1'} handleClick={props.handleClick}>1</Button>\n            <Button id='two' label={'2'} handleClick={props.handleClick}>2</Button>\n            <Button id='three' label={'3'} handleClick={props.handleClick}>3</Button>\n            <Button id='add' label={'+'} handleClick={props.handleClick} classname=\"operator\">+</Button>\n        </div>\n        <div className={classes.buttonRow}>\n            <Button id='decimal' label={'.'} handleClick={props.handleClick} classname=\"decimal\"><div className={classes.decimalSign}></div></Button>\n            <Button id='zero' label={'0'} handleClick={props.handleClick} classname=\"zero\">0</Button>\n            <Button id='equals' label={'='} handleClick={props.handleClick} classname=\"operator\">=</Button>\n        </div>\n    </div>\n)\n\nexport default ButtonContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './Calculator/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}